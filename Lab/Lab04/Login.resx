<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAB//9k=
</value>
  </data>
</root>